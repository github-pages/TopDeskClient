
trigger:
  branches:
    include:
    - master
  paths:
    exclude:
    - README.md
    - Extras/*
    - Docs/*


pr: none

pool:
  vmImage: 'vs2017-win2016'

steps:

- powershell: .\build.ps1 -Task 'fullBuild'
  displayName: 'Run Build'

- powershell: |
   $vernum = & GitVersion.exe /output json /showvariable MajorMinorPatch
   Write-Host "##vso[task.setvariable variable=PIPEVERSION]$($vernum)"
  displayName: SetVersion

- powershell: |
   Write-Host '##vso[build.addbuildtag]$(PIPEVERSION)'
   Write-Host '##vso[build.updatebuildnumber]$(PIPEVERSION)'
  displayName: 'Set Build Tag'

- task: PublishTestResults@2
  displayName: 'Publish Test Results'
  condition: always()
  inputs:
    testResultsFiles: '**/TEST-*.xml'
    testResultsFormat: NUnit
    searchFolder: '$(Common.TestResultsDirectory)'
    mergeTestResults: true

- task: PublishCodeCoverageResults@1
  displayName: 'Publish Code Coverage Results'
  condition: always()
  inputs:
    codeCoverageTool: 'JaCoCo'
    summaryFileLocation: '$(Common.TestResultsDirectory)/Coverage-*.xml'

- task: CopyFiles@2
  displayName: 'Copy Files to: Build '
  inputs:
    Contents: '**/*.zip'
    SourceFolder: BuildOutput
    TargetFolder: $(Build.StagingDirectory)
    CleanTargetFolder: true

- task: PublishPipelineArtifact@0
  inputs:
    artifactName: 'TopDesk Client'
    targetPath: $(Build.StagingDirectory)/TopDeskClient.zip
